name: Create release from latest tag
on:
  workflow_dispatch:
  
jobs:  
  Check-pr-status:  
    runs-on: ubuntu-latest  
    steps: 
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Create Git Tag
        id: create_tag
        run: |
          git config --global --add safe.directory "$(pwd)" 
          git config --global user.email "automationNoReply@ssnc.com"
          git config --global user.name "Github Automation"       
          git tag -a v1235 -m "Version v1235"  
          git push origin v1235
        
      - name: Get latest tag
        id: latest_tag
        run: |
          git fetch --tags
          TAG=$(git describe --tags `git rev-list --tags --max-count=1`)
          eval echo "tag=$TAG >> $GITHUB_OUTPUT"     

      - name: Check if release exists
        id: check_release
        env:
           GH_TOKEN: ${{ github.token }}
        run: |
          TAG_NAME=${{ steps.latest_tag.outputs.tag }}
          EXISTING_RELEASE=$(gh release list --json tagName)
          echo "$EXISTING_RELEASE"
          eval echo "exists=$EXISTING_RELEASE" >> $GITHUB_OUTPUT
          # if [ "$EXISTING_RELEASE" != "release not found" ]; then
          #   echo "Release with tag $TAG_NAME already exists."
          #   eval echo "exists=true" >> $GITHUB_OUTPUT
          # else
          #   echo "Release with tag $TAG_NAME does not exist."
          #   eval echo "exists=false" >> $GITHUB_OUTPUT
          # fi
          
      - name: Create Release
        if: steps.check_release.outputs.exists == '[1]'  
        id: create_release
        uses: actions/create-release@v1.1.4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.latest_tag.outputs.tag }}
          release_name: ${{ steps.latest_tag.outputs.tag }}
          body: |
            Github Automation
          draft: false
          prerelease: false         
